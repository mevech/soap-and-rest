## This is basic continuous integration build for your Quarkus application.

name: Quarkus Codestart CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMMIT_HASH: ${{ github.head_ref }}.${{ github.sha }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build maven server
        working-directory: ./server
        run: |
          ./mvnw verify -B
          ./mvnw clean package
      - name: Build maven client
        working-directory: ./client
        run: |
          ./mvnw verify -B
          ./mvnw clean package
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        working-directory: ./server
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}-server
          IMAGE_TAG1: $COMMIT_HASH
          IMAGE_TAG2: ${{ steps.date.outputs.date }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG2 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
      - name: Build, tag, and push image to Amazon ECR
        working-directory: ./client
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}-client
          IMAGE_TAG1: $COMMIT_HASH
          IMAGE_TAG2: ${{ steps.date.outputs.date }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG1 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG2 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags


